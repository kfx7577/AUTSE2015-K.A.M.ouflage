/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package a2;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.Properties;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 *
 * @author Anthony
 */
public class StoreBibliography extends HttpServlet {
    
        private Connection connect;
    private PreparedStatement state;
    String dbTitle, dbAuthor, dbJournal, dbYear,
            dbCredability, dbrating,dbReason, username, password;

    public StoreBibliography() throws IOException {
      

    }

    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    
       @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        //doPost(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        PrintWriter write = response.getWriter();
        response.setContentType("text/html");
        dbTitle = request.getParameter("dbTitle");
        dbAuthor = request.getParameter("dbAuthor");
        dbJournal = request.getParameter("dbJournal");
        dbYear = request.getParameter("dbYear");
        dbCredability = request.getParameter("dbCredability");
        dbrating = request.getParameter("dbrating");
        dbReason = request.getParameter("dbReason");
        username = request.getParameter("username");
        password = request.getParameter("password");

        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver");

            //connect = DriverManager.getConnection("jdbc:derby://localhost:1527/Automotive,username,USERNAME");
            Properties properties = new Properties();
            properties.loadFromXML(getClass().getResourceAsStream("CustomerServletConfig.xml"));
            String dbDriver = properties.get("dbDriver").toString();
            String dbUrl = properties.get("dbUrl").toString();
            //username and password to access the database
            String userName = properties.get("user").toString();
            String passWord = properties.get("pass").toString();
            connect = DriverManager.getConnection(dbUrl, userName, passWord);

            state = connect.prepareStatement("INSERT INTO CUSTOMERS (Title, Author,Journal, Year,Credability , rating, Reason, USERNAME, PASSWORD) VALUES(?,?,?,?,?,?,?,?,?)");

            //String insert = ("INSERT INTO CUSTOMERS VALUES('dbFirstName'+'dbLastName'+'dbAddressLine1')");
            //state = connect.prepareStatement(insert);
            state.setString(1, dbTitle);
            state.setString(2, dbAuthor);
            state.setString(3, dbJournal);
            state.setString(4, dbYear);
            state.setString(5, dbCredability);
            state.setString(6, dbrating);
            state.setString(7, dbReason);
            state.setString(8, username);
            state.setString(9, password);

            int update = state.executeUpdate();
            if (update > 0) {
                write.print("registration successful");
            }

        } catch (Exception e) {
            write.close();
        }
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}
